services:
  postgres:
    image: postgres:18rc1-alpine3.22
    container_name: techonoblog-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - techonoblog-postgres-data:/var/lib/postgresql/data
    networks:
      - techonoblog-network
    restart: "no"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3

  api:
    image: node:24-alpine3.21
    container_name: techonoblog-api
    command: sh -c "corepack enable pnpm && corepack use pnpm@latest-10 && pnpm install && pnpm run start:dev"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${PORT}:${PORT}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - techonoblog-network
    restart: "no"
    volumes:
      - .:/workspace
      - /workspace/node_modules
      - /workspace/apps/api/node_modules
    working_dir: /workspace/apps/api
    stdin_open: true
    tty: true

networks:
  techonoblog-network:
    driver: bridge

volumes:
  techonoblog-postgres-data:
